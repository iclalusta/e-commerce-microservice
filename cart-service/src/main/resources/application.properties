spring.application.name=cart-service
# Default port can be overridden with CART_SERVICE_PORT
server.port=${CART_SERVICE_PORT:8084}

# MongoDB connection
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI:mongodb://localhost:27017/cartdb}

# RabbitMQ connection
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:guest}

# External service URLs
product.service.url=${PRODUCT_SERVICE_URL:http://product-service:8083}
cart.item.added.exchange=cartExchange
cart.item.added.routingKey=cart.item.added
product.updated.queue=product.updated.queue
rabbitmq.order.exchange=order_exchange
order.created.routingKey=order.created


rabbitmq.queue.name=order.created.queue
rabbitmq.exchange.name=order.exchange
rabbitmq.routing.key=order.created.routingkey

#gemini
rabbitmq.exchange.product=product.exchange
rabbitmq.routingkey.product.updated=product.updated.routingkey

# --- Actuator Configuration ---
# Expose health and prometheus endpoints over the web
management.endpoints.web.exposure.include=health,prometheus

# Show full details on the health endpoint (e.g., database connection status)
management.endpoint.health.show-details=always

# The URL where your Zipkin server will be running
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans

# Tell Micrometer how often to sample requests for tracing.
# 1.0 means trace 100% of requests (great for development and demo)
# In production, you might set this to 0.1 (10%)
management.tracing.sampling.probability=1.0
